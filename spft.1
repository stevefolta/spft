.TH spft 1
.SH NAME
spft - simple proportional-font terminal

.SH SYNOPSIS
.B spft
.RB [ \-t
.IR title
|
.B title:
.IR title ]
.RB [ working-directory:
.IR dir ]
.RB [ \-g
.IR geometry |
.B geometry:
.IR geometry ]
.PP
Keyword-style arguments can also be given with the traditional double-dash syntax
(eg. "--title" instead of "title:").

.SH DESCRIPTION
.B spft
is a simple terminal emulator that supports proportional (that is, non-monospace) fonts.

.SH KEYS
.TP
.B Shift-PageUp, Shift-PageDown
Scroll up and down in the history.
.TP
.B Shift-Insert
Re-read the settings file and immediately use the new settings.
.TP
.B Alt-Plus, Alt-Minus
Adjust font size.

.SH CONFIGURATION
spft can be configured using the \(lq$XDG_CONFIG_HOME/spft/settings\(rq file
(\(lq~/.config/spft/settings\(rq by default).  In this file, \(lq#\(rq
introduces a comment that runs to the end of the line.  Everything else is a
series of settings, in the form
.RI \(lq name
=
.IR value \(rq.
These settings can optionally be separated by commas or semicolons, but this is not necessary.
For settings that use a string value, the string must be enclosed in double or single quotes.
For settings that use a boolean value, the setting must be either "true" or "false" (without quotes).
.TP
.B font
A string representing the font to use, in the FontConfig format.  See
<https://www.freedesktop.org/software/fontconfig/fontconfig-user.html#AEN36>.
.TP
.B line_drawing_font
If this is set (not empty), it's a string representing the font to use for the
DEC Line Drawing characters.  You can set this if your main font doesn't
include the Unicode box-drawing characters.
.TP
.B default_foreground_color, default_background_color
Numbers representing these colors.  Small numbers are ANSI colors, so if you
want to change to a dark theme, you can use \(lqdefault_foreground_color = 15,
default_background_color = 0\(rq.  Numbers with the high bit set are RGB colors
in the form 0x80rrggbb.
.TP
.B term_name
A string that becomes the $TERM.  Defaults to \(lqxterm\(rq.
.TP
.B average_character_width
A floating-point number representing an estimate of the width of the average
character used in the font, as a fraction of the width of the capital
\(lqM\(rq.  So it should usually be between 0.0 and 1.0.
This affects how many columns programs think they have available.  If this is
too large, you'll have a lot of unused space on the right side of the window.
If it's too small, you can have characters (and even the cursor) running off
the right edge of the screen where you can't see them.
.TP
.B double_click_ms
The maximum time, in milliseconds, for two clicks to be considered a double- or
triple-click.
.TP
.B word_separator_characters, additional_word_separator_characters
When double-clicking to select word-by-word, these are the characters that
considered not to be part of a word.  You can entirely replace the defaults by
setting \(lqword_separator_characters\(rq, or add to them by setting
\(lqadditional_word_separator_characters\(rq.
.TP
.B window_title
The title of the window.
.TP
.B tab_width
The tab width for tab-stop (that is, non-elastic) tabs, in pixels.
.TP
.B column_separation
The space between columns when using elastic tabs, in pixels.
.TP
.B synthetic_tab_spaces
Imagine you're editing a file in Vim.  Even if the lines in your file are
indented using tabs, Vim will use some number of spaces (based on its 'tabstop'
setting) to show them on the screen, because it thinks of the screen as a grid
of characters.  If \(lqsynthetic_tab_spaces\(rq is greater than zero, spft will
treat that number of spaces at the beginning of a line as a \(lqsynthetic
tab\(rq, and display them as being \(lqtab_width\(rq pixels wide (by widening
the last space).  Set \(lqsynthetic_tab_spaces\(rq to the same value as
Vim's 'tabstop' and 'shiftwidth' settings to have indentation show up the way
you like it based on how you set \(lqtab_width\(rq.  Defaults to zero, meaning
\(lqsynthetic tabs\(rq are disabled.
.TP
.B geometry
The window geometry, as per 
.BR XParseGeometry (3).
Note that the width and height units are (approximate) columns and lines, like
other terminal programs, not pixels.
.TP
.B border
The window border (if any), in pixels.
.TP
.B default_auto_wrap
A boolean indicating whether "auto-wrap" defaults to being on or off.  If not
specified, this defaults to being on, because readline (and hence bash) assumes
that auto-wrap is on without explicitly sending the code to turn it on.
.TP
.B font_size_increment
A floating-point number indicating how much to increment or decrement the font
size (in pixels) when using the Alt-Plus or Alt-Minus keys.


.SH ELASTIC TABS
spft supports elastic tabs, enabled by a pair of non-standard "DEC Private
Mode" escape sequences.  "\\x1B[?5001h" signals that the current cursor line
starts group of lines with elastic tabs.  "\\x1B[?5001l" ends that group of
lines; the current cursor line will not be part of it.  There are also expanded
versions of these: "\\x1B[?5002;Nh", where N is the number of columns that will
be right-justified; and "\\x1B?5002;1l" which ends the group, but includes the
line with the cursor (useful if you're right-justifying columns in a single
line).



.SH SEE ALSO
.BR mlterm (1),
.BR st (1)


